import numpy as np
import matplotlib.pyplot as plt
import matplotlib.ticker as mtick

nSetSize = 8
dSetSize = 8
fSetSize = 8

nX= np.arange(nSetSize)
dX= np.arange(dSetSize)
fX= np.arange(fSetSize)

fig = plt.figure(figsize=(15, 8), dpi=72, facecolor="white")
ax = plt.subplot(111)
nGroup_labels = ['50', '100', '150', '200', '250','300', '350', '400']
dGroup_labels = ['16', '32', '64', '128', '256','512','1024','2048']
fGroup_labels = ['10','20', '30', '40', '50', '60','70','80']

markers = ['^', 'X', 'o', 'p', 's','\']

#plt.plot(nGroup_labels , label = 'FEUA-OPT', marker = '^', color = '#FFCD00FF', linestyle='--')
#plt.plot(nGroup_labels , label = 'FEUAGame', marker = 'X', color = '#CC0C00FF', linestyle='-')
#plt.plot(nGroup_labels, label = 'MEDAGame', marker = 'o', color = '#84BD00FF', linestyle='-.')
#plt.plot(nGroup_labels, label = 'TPDSGame', marker = 'p', color = '#5C88DAFF', linestyle=';')
#plt.plot(nGroup_labels, label = 'Greedy', marker = 's', color = '#00B5E2FF', linestyle=',,')
#plt.plot(nGroup_labels, label = 'Random', marker = '\', color = '#7C878EFF', linestyle='+')

params = {'legend.fontsize': 25,
          'legend.handlelength': 1.1}
plt.rcParams.update(params)

total_width, n = 1.2, 11
width = total_width / n
x = np.arange(nSetSize)

FEUAGame = (0.24,	0.23,	0.206666667,	0.19,	0.184,	0.176666667,	0.165714286,	0.1575)
MEDAGame = (0.28	,0.25	,0.246666667	,0.228,	0.2,	0.19	,0.18,	0.16)
TPDSGame = (0.275	,0.27,	0.26666667,	0.24,	0.21,	0.206666667,	0.191428571,	0.1725)
IoTJ2022 = (0.71	,0.63,	0.626	,0.545	,0.54	,0.515,	0.4925,	0.47285714)
TGCN2021 = (0.74,	0.65,	0.616666667,	0.5825,	0.538,	0.533333333,	0.498571429,	0.49)
Greedy = (0.72	,0.65,	0.616	,0.55	,0.54	,0.525,	0.49,	0.474285714)
Random = (0.75,	0.66,	0.626666667,	0.59,	0.546,	0.533333333,	0.508571429,	0.5)

#plt.bar(x - 3.5 * width, FEUAOPT,   width=width, label='FEUA-OPT', color='#FFCD00FF', edgecolor=['k']*len(x), hatch='')
plt.bar(x - 2.5 * width, FEUAGame, width=width, color='#CC0C00FF', label = 'FEUAGame', edgecolor=['k']*len(x), hatch='')
plt.bar(x - 1.5 * width, MEDAGame, width=width, color='#84BD00FF', label = 'TMC2022', edgecolor=['k']*len(x), hatch='')
plt.bar(x - 0.5* width,TPDSGame, width=width, label='TPDS2020', color='#5C88DAFF', edgecolor=['k']*len(x), hatch='')
plt.bar(x + 0.5* width, IoTJ2022,  width=width, label = 'IoTJ2022', color = '#F18A85', edgecolor=['k']*len(x), hatch='')
plt.bar(x + 1.5* width, TGCN2021,  width=width, label = 'TGCN2021', color = '#634490', edgecolor=['k']*len(x), hatch='')
plt.bar(x + 2.5 * width , Greedy, width=width, color='#00B5E2FF', label =  'Greedy', edgecolor=['k']*len(x), hatch='')
plt.bar(x + 3.5* width, Random,  width=width, label= 'Random', color='#7C878EFF', edgecolor=['k']*len(x), hatch='')

plt.xticks(x, nGroup_labels, rotation=0)

# cost: 1 - 17 (n), 1 - 7 (d)
# benefit per replica: 10 - 40, 30 - 150, 20 - 80(d)  10 - 25, 20 - 120, 20 - 45 (n)
# execution time: 0 - 5(n)   0 - 0.05(d)

# x lables: The number of edge servers           Edge density
# y labels: Execution Time (s)      Benefits per replica     The cost of caching data

#plt.ylim(0.05, 0.275)

plt.xlabel(u"Number of edge servers", fontsize=35)
plt.ylabel(u"Select Ratio of Edge Servers", fontsize=30)

plt.tick_params(labelsize=40)

plt.legend(loc='upper left')

plt.tight_layout()
plt.grid(True)
plt.tight_layout()

foo_fig = plt.gcf()
foo_fig.savefig('C:\\figures\\2-1server.eps',
                format='eps', dpi=1000)
foo_fig.savefig('C:\\figures\\2-1server.png',
                format='eps', dpi=200)


plt.show()





