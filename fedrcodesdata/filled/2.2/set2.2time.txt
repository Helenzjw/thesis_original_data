import numpy as np
import matplotlib.pyplot as plt
import matplotlib.ticker as mtick
from matplotlib.ticker import ScalarFormatter

nSetSize = 8
dSetSize = 8
fSetSize = 8

nX= np.arange(nSetSize)
dX= np.arange(dSetSize)
fX= np.arange(fSetSize)

fig = plt.figure(figsize=(10, 8), dpi=72, facecolor="white")
ax = plt.subplot(111)

nGroup_labels = ['50', '100', '150', '200', '250','300', '350', '400']
dGroup_labels = ['16', '32', '64', '128', '256','512','1024','2048']
fGroup_labels = ['10','20', '30', '40', '50', '60','70','80']

markers = ['^', 'X', 'o', 'p', 's', '\']


params = {'legend.fontsize': 25,
          'legend.handlelength': 1.1}
plt.rcParams.update(params)

total_width, n = 1.5, 11
width = total_width / n
x = np.arange(nSetSize)

FEUAGame = (40,	186,	646,	1375,	2821,	5568,	9628,	14005)
MEDAGame = (470,	191,	659,	1422,	2886,	5670,	9640,	14043)

TPDSGame = (40,	186,	597,	1272,	2556,	4977,	8773,	13054)
Greedy = (40,	186,	597,	1272,	2556,	4977,	8773,	13054)
Random = (1,	1,	4,	1,	2,	3,	7,	1)

#plt.plot(dGroup_labels, Opt,  label = 'FEDR-OPT', marker = 'o',  markersize = '35', color = '#FFC0CB', markerfacecolor='#FFC0CB',   linestyle='--', linewidth='5')
plt.plot(dGroup_labels, FEUAGame,  label = 'FairEDR', marker = 'h',  markersize = '35', color = '#F33D3C', markerfacecolor='#F33D3C',   linestyle='--', linewidth='5')
plt.plot(dGroup_labels, MEDAGame, label = 'TMC2022', marker = 'v',  markersize = '35', color = '#F37A5E', markerfacecolor='#F37A5E',linestyle='-.', linewidth='5')
plt.plot(dGroup_labels, TPDSGame, label = 'TPDS2022', marker = '+',  markersize = '35',  color = '#ABBF63', markerfacecolor='#ABBF63',linestyle='-.', linewidth='5')
plt.plot(dGroup_labels, Greedy, label = 'Greedy', marker = 'p',  markersize = '35', color = '#82C9D9',markerfacecolor='#82C9D9', linestyle='-.', linewidth='5')
plt.plot(dGroup_labels, Random , label = 'Random ', marker = 'x',  markersize = '35',  color = '#401219', markerfacecolor='#401219', linestyle='-.', linewidth='5')

# 启用纵坐标的科学计数法
ax.yaxis.set_major_formatter(ScalarFormatter(useMathText=True))

# 设置科学计数法样式
ax.yaxis.get_major_formatter().set_powerlimits((0, 0))

plt.xticks(x, dGroup_labels, rotation=0)

# 启用纵坐标的科学计数法
ax.yaxis.set_major_formatter(ScalarFormatter(useMathText=True))

# 设置科学计数法样式
ax.yaxis.get_major_formatter().set_powerlimits((0, 0))
#plt.ylim(0.05, 0.275)

plt.xlabel(u"Number of Edge Users (m)", fontsize=35)
plt.ylabel(u"Computation Overhead (ms)", fontsize=30)

plt.tick_params(labelsize=33)

plt.legend(loc = 'upper left')

plt.tight_layout()
plt.grid(True)
plt.tight_layout()

foo_fig = plt.gcf()
foo_fig.savefig('C:\\figures\\2-2time.eps',
                format='eps', dpi=1000)


plt.show()





